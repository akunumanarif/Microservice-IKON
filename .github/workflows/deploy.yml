on:
  push:
    branches: [ DAY-22 ]

  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: compile auth service
        run: |
          cd auth-service
          mvn compile

      - name: compile gateway service
        run: |
          cd gateway-service
          mvn compile

      - name: compile project service
        run: |
          cd project-service
          mvn compile

      - name: compile task service
        run: |
          cd task-service
          mvn compile

      - name: compile rabbitmq-consumer service
        run: |
          cd rabbitmq-consumer-service
          mvn compile

      - name: compile rabbitmq-producer service
        run: |
          cd rabbitmq-producer-service
          mvn compile

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker-compose.yaml
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/gateway-service:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/auth-service:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/project-service:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/task-service:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/rabbitmq-consumer-service:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/rabbitmq-producer-service:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}



#on:
#  push:
#    branches: [ DAY-22 ]
#
#  workflow_dispatch:
#
#jobs:
#  build_and_deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: compile
#        run: |
#          cd auth-service
#          mvn compile
##          cd gateway-service
##          mvn compile
##      - name: test
##        run: |
##          cd auth-service
##          mvn test
#
#      - name: Configure Certificate
#        env:
#          DOCKER_CA: ${{ vars.VAR_DOCKER_CA }}
#          DOCKER_CERT: ${{ vars.VAR_DOCKER_CERT }}
#          DOCKER_KEY: ${{ vars.VAR_DOCKER_KEY }}
#          DOCKER_HOST: "ec2-13-113-140-77.ap-northeast-1.compute.amazonaws.com:2376"
#          DOCKER_TLS_VERIFY: 0
#        run: |
#          sudo mkdir -pv /home/runner/.docker
#          echo "$DOCKER_CA" > /home/runner/.docker/ca.pem
#          echo "$DOCKER_CERT" > /home/runner/.docker/cert.pem
#          echo "$DOCKER_KEY" > /home/runner/.docker/key.pem
#          make
